import{_ as s,c as a,o as t,ag as e}from"./chunks/framework.BZemHgQ6.js";const d=JSON.parse('{"title":"Security & Best Practices","description":"","frontmatter":{},"headers":[],"relativePath":"guide/security.md","filePath":"guide/security.md"}'),n={name:"guide/security.md"};function h(l,i,r,p,k,o){return t(),a("div",null,i[0]||(i[0]=[e(`<hr><h1 id="security-best-practices" tabindex="-1">Security &amp; Best Practices <a class="header-anchor" href="#security-best-practices" aria-label="Permalink to &quot;Security &amp; Best Practices&quot;">​</a></h1><p>Security is critical for any application. Here are the best practices implemented in Modern Dictionary to ensure a secure environment.</p><h2 id="authentication-authorization" tabindex="-1">Authentication &amp; Authorization <a class="header-anchor" href="#authentication-authorization" aria-label="Permalink to &quot;Authentication &amp; Authorization&quot;">​</a></h2><p>We use <strong>JWT (JSON Web Tokens)</strong> for authentication. After logging in, users receive a token that is used to verify their identity in subsequent API requests.</p><h3 id="token-based-authentication" tabindex="-1">Token-based Authentication <a class="header-anchor" href="#token-based-authentication" aria-label="Permalink to &quot;Token-based Authentication&quot;">​</a></h3><ul><li>When the user logs in, they receive a <strong>JWT</strong>.</li><li>The frontend includes this token in the Authorization header for protected routes.</li><li>The backend verifies the token before granting access to sensitive data.</li></ul><h2 id="two-factor-authentication-2fa" tabindex="-1">Two-Factor Authentication (2FA) <a class="header-anchor" href="#two-factor-authentication-2fa" aria-label="Permalink to &quot;Two-Factor Authentication (2FA)&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">2FA Security</p><p>To enhance security, we implement <strong>2FA (Two-Factor Authentication)</strong>, requiring users to verify their identity with an additional factor besides their password.</p></div><h3 id="_2fa-implementation-steps" tabindex="-1">2FA Implementation Steps: <a class="header-anchor" href="#_2fa-implementation-steps" aria-label="Permalink to &quot;2FA Implementation Steps:&quot;">​</a></h3><ol><li>Users enable 2FA in their profile settings.</li><li>A unique code is generated and sent via email or an authentication app.</li><li>Users must enter the code during login to complete authentication.</li></ol><h2 id="google-recaptcha" tabindex="-1">Google reCAPTCHA <a class="header-anchor" href="#google-recaptcha" aria-label="Permalink to &quot;Google reCAPTCHA&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">Bot Protection</p><p>To prevent bot attacks, we use <strong>Google reCAPTCHA</strong> in login and signup forms.</p></div><h3 id="recaptcha-integration" tabindex="-1">reCAPTCHA Integration: <a class="header-anchor" href="#recaptcha-integration" aria-label="Permalink to &quot;reCAPTCHA Integration:&quot;">​</a></h3><ul><li>The frontend includes Google&#39;s <strong>reCAPTCHA v2/v3</strong> widget.</li><li>On form submission, the reCAPTCHA token is verified with Google’s API.</li><li>If verification fails, the request is rejected to prevent bot interactions.</li></ul><h3 id="example-of-recaptcha-validation-in-laravel" tabindex="-1">Example of reCAPTCHA Validation in Laravel: <a class="header-anchor" href="#example-of-recaptcha-validation-in-laravel" aria-label="Permalink to &quot;Example of reCAPTCHA Validation in Laravel:&quot;">​</a></h3><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> validateRecaptcha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $request)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Http</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://www.google.com/recaptcha/api/siteverify&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;secret&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> env</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;RECAPTCHA_SECRET_KEY&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;response&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">recaptcha_token,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;success&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;message&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;reCAPTCHA verification failed&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">403</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;message&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;reCAPTCHA verification successful&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr>`,18)]))}const g=s(n,[["render",h]]);export{d as __pageData,g as default};
